syntax = "proto3";

package pb;

service DataNode{
    rpc UploadChunks(stream Chunk) returns (Response); // cliente a data node
    rpc DownloadChunks(RequestChunk) returns (Chunk); // cliente a data node
    rpc SaveChunks(stream Chunk) returns (Response); // data node a data node
    rpc ProposalRequest(ProposalAcces) returns (Response); // data node a data node para escribir distributed
}

service NameNode{
    rpc RequestWrite(Empty) returns (Response); // centralized
    rpc CentralizedWriteLog(Proposal) returns (Response);  // centralized
    rpc DistributedWriteLog(Proposal) returns (Response); // distributed
    rpc FinalProposal(Proposal) returns (Proposal); // centralized
    rpc FileRequest(Empty) returns (stream File); // client  a namenode
    rpc AddressRequest(File) returns (ChunkAddress); // cliento to namenode
}

message ProposalAcces{
    int32 NodeId = 1;
    string timeStamp = 2;
}

message Empty{
}

message Response{
    string response = 1;
}

message Proposal{
    string fileName = 1;
    repeated int32 chunksDn1 = 2;
    repeated int32 chunksDn2 = 3;
    repeated int32 chunksDn3 = 4;
}

message Chunk{
    string chunkId = 1;
    bytes chunk = 2;
}

message RequestChunk{
    string chunkId = 1;
}

message File{
    string fileName = 1;
}

message ChunkAddress{
    repeated string ip = 1;
}